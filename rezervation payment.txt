using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using ViesbucioPuslapis.Data;
using ViesbucioPuslapis.Models;

namespace ViesbucioPuslapis.Pages.ClientSystem
{
    public class ReservationPaymentModel : PageModel
    {
        private readonly ILogger<ErrorModel> _logger;
        private readonly HotelDbContext _db;

        public DateTime startDate;
        public DateTime endDate;
        public double reservationCost;
        public Room room { get; set; }
        public List<Reservation> reservations { get; set; }

        public ReservationPaymentModel(ILogger<ErrorModel> logger, HotelDbContext db)
        {
            _logger = logger;
            _db = db;
        }
        public void OnGet(string roomnr, string start, string end)
        {
            if (start == null || end == null)
                return;

            startDate = DateTime.Parse(start);
            endDate = DateTime.Parse(end);

            TimeSpan timeSpent = endDate - startDate;
            double days = timeSpent.TotalDays;

            reservations = _db.kambario_rezervacija.ToList();
            room = _db.kambarys.First(r => r.kambario_numeris == roomnr.ToString());

            reservationCost = days * room.nakties_kaina;
        }

        public IActionResult OnPostMakePayment(string cardNumber, string cardHolderName, string expiryDate, string cvv)
        {
            // Čia įvykdykite reikiamus veiksmus susijusius su mokėjimu
            // Pavyzdžiui, patvirtinkite mokėjimą ir išsaugokite reikiamus duomenis
            // ...

            // Po sėkmingo mokėjimo nukreipkite vartotoją į atitinkamą puslapį
            return RedirectToPage("/SubmitPayment");
        }
    }
}


@page
@model ViesbucioPuslapis.Pages.ClientSystem.ReservationPaymentModel
@{
}

@*<div class="row align-content-center">
    <table class="table">
        <thead>
            <tr>
                <th>Kambario numeris</th>
                <th>Vietų kiekis</th>
                <th>Rezervacijos kaina</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>@Model.room.kambario_numeris</td>
                <td>@Model.room.vietu_kiekis</td>
                <td>@Model.reservationCost</td>
            </tr>
        </tbody>
    </table>
</div>*@

@*<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-body">
                    <h2 class="card-title text-center">Kambario rezervacijos apmokėjimas</h2>

                    <!-- Mokėjimo forma -->
                    <form method="post" asp-area="" asp-page="/ClientSystem/SubmitPayment">
                        <!-- Pakeiskite veiksmo (action) kelią pagal savo poreikius -->
                        <div class="form-group">
                            <label for="cardNumber">Kortelės numeris</label>
                            <input type="text" class="form-control" id="cardNumber" name="cardNumber" placeholder="Įveskite kortelės numerį" required>
                        </div>
                        <div class="form-group">
                            <label for="cardHolderName">Kortelės turėtojas</label>
                            <input type="text" class="form-control" id="cardHolderName" name="cardHolderName" placeholder="Vardas ir pavardė" required>
                        </div>
                        <div class="form-group">
                            <label for="expiryDate">Galiojimo data</label>
                            <input type="text" class="form-control" id="expiryDate" name="expiryDate" placeholder="MM/YY" required>
                        </div>
                        <div class="form-group">
                            <label for="cvv">CVV</label>
                            <input type="text" class="form-control" id="cvv" name="cvv" placeholder="CVV" required>
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Apmokėti</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>*@



<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-body">
                    <h2 class="card-title text-center">Kambario rezervacijos apmokėjimas</h2>

                    <!-- Mokėjimo forma -->
                    <form method="post" action="https://www.paypal.com/cgi-bin/webscr" target="_blank">
                        <!-- Pakeiskite veiksmo (action) kelią pagal savo poreikius -->
                        <input type="hidden" name="cmd" value="_xclick">
                        <input type="hidden" name="business" value="YOUR_PAYPAL_EMAIL">
                        <input type="hidden" name="item_name" value="Kambario rezervacija">
                        <input type="hidden" name="amount" value="@Model.reservationCost">
                        <input type="hidden" name="currency_code" value="USD">
                        <input type="hidden" name="return" value="URL_TO_RETURN_AFTER_PAYMENT_SUCCESS">
                        <input type="hidden" name="cancel_return" value="URL_TO_RETURN_AFTER_PAYMENT_CANCEL">
                        <input type="submit" class="btn btn-primary btn-block" value="Apmokėti su PayPal">
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- JavaScript kodas puslapio apačioje -->
<script>
    paypal.Buttons({
        createOrder: function(data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: '@Model.reservationCost' // Dynamically insert the reservation cost
                    }
                }]
            });
        },
        onApprove: function(data, actions) {
            return actions.order.capture().then(function(details) {
                console.log(details);
                // Add any additional logic you need after the payment is captured
            });
        }
    }).render('#paypal-button');
</script>
